module Model

imports
	Common
	Expressions
	Types

context-free syntax // entities

	Model.Entity = <
		entity <ID> {
			<{Member "\n"}*>
		}
	>
  Model.FirstClassRelation = <
    relation <ID> {
      <{Member "\n"}*>
    }
  >
	EntityOrRelation.EntityType = <entity>
	EntityOrRelation.RelationType = <relation>

context-free syntax // shortcut relations

  Model.ShortcutRelation = [
    relation [EntityRef].[ID][SpaceMultiplicity?][SpaceOrdering?] <->[SpaceMultiplicity?][SpaceOrdering?] [EntityRef].[ID] {
      [{Attribute "\n"}*]
    }
  ]

context-free syntax // non-first-class relation

  Model.Relation = [
    relation [EntityRef].[ID][SpaceMultiplicity?][SpaceOrdering?] <->[SpaceMultiplicity?][SpaceOrdering?] [EntityRef].[ID]
  ]
  
  SpaceMultiplicity.SpaceMultiplicity   = [ [Multiplicity]]
  SpaceOrdering.SpaceOrdering           = [ [Ordering]]

context-free syntax // entity members

	Member											  = <<Attribute>>
	Member										  	= <<Role>>
	Member										  	= <<Shortcut>>

  Attribute.Attribute           = <
    <ID> : <PrimitiveType><Multiplicity?>
  >
  Attribute.DerivationAttribute = <
    <ID> : <PrimitiveType><Multiplicity?> = <Exp>
  >
  Attribute.DefaultAttribute    = <
    <ID> : <PrimitiveType><Multiplicity?> = <Exp> (default)
  >
	DerivationType.DefaultValue  	= <(default)>
	DerivationType.Derivation		  = <>

  Role.Role                     = <<ID><DotID?; hide><SpaceMultiplicity><SpaceOrdering?><SpaceArrowID?>>
  DotID.DotID                         = <.<ID>>
  SpaceArrowID.SpaceArrowID                  = [ -> [ID]]

	Shortcut.Shortcut					  	= <<RoleRef>.<ID> \<-\> <RoleRef>.<ID>>

context-free syntax // specific references
	
	EntityRef.EntityRef 				  = ID
	AttributeRef.AttributeRef     = ID
	RoleRef.RoleRef						  	= ID
	MemberRef.MemberRef           = ID // attr or shortcut
